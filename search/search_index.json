{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Welcome to the Lixia Search documentation! Here, you'll discover three seamless ways to integrate our powerful search functionalities into your website or application:</p> <ol> <li> <p>Embed a Search Bar: Enhance your website with a fully functional search bar and results page, all integrated directly within your existing design. Click here to learn more.</p> </li> <li> <p>Leverage a Hosted Search Page: Simplify integration with our hosted search page, allowing users to search your website content directly within a familiar interface. Click here to learn more.</p> </li> <li> <p>Build Your Own Custom Search (Advanced): For experienced developers, Lixia Search offers a robust API. Craft a completely customized search experience by building your own ingester/crawler and user interface on top of our powerful search engine. For in-depth insights and comprehensive details about our API's capabilities, refer to the API Documentation</p> </li> </ol>"},{"location":"embed-a-search-bar/","title":"Embed a Search Bar","text":"<p>Enhance your website with a powerful built-in search experience in just a few steps! The Lixia Search bar seamlessly integrates with your existing design, empowering users to effortlessly find the information they need.</p>"},{"location":"embed-a-search-bar/#live-demo","title":"Live Demo","text":"<p>https://demo.lixiasearch.com</p> <p></p>"},{"location":"embed-a-search-bar/#integration","title":"Integration","text":"<p>Add the following HTML code snippet to your website's code.</p> <pre><code>&lt;script src=\"https://cdn.lixiasearch.com/v1/lixia.js\"&gt;&lt;/script&gt;\n&lt;div\n    class=\"lixia-container\"\n    data-index-id=\"INDEX_ID\"\n    data-auth-token=\"ACCESS_TOKEN\"\n&gt;&lt;/div&gt;\n</code></pre> <p>YOUR_INDEX_ID: This unique identifier specifies the search index you want to connect the search bar to. Locate your index ID within the Lixia Search dashboard.</p> <p>YOUR_ACCESS_TOKEN: This token authenticates your website's access to the Lixia Search API. Retrieve your access token from the Lixia Search dashboard security settings.</p>"},{"location":"hosted-search-page/","title":"Hosted Search Page","text":"<p>Simplify search integration with the Lixia Search hosted search page! This pre-built search interface offers a familiar and user-friendly search experience for your website visitors. Even though Lixia Search manages the interface, it seamlessly integrates with your website, allowing users to effortlessly search your website content.</p>"},{"location":"hosted-search-page/#live-demo","title":"Live Demo","text":"<p>https://s.lixiasearch.com/c/demo.lixiasearch.com</p> <p></p>"},{"location":"hosted-search-page/#integration","title":"Integration","text":"<p>Add the following HTML code snippet to your website's code.</p> <pre><code>&lt;form action=\"https://s.lixiasearch.com/c/YOUR_WEBSITE\"&gt;\n    &lt;input type=\"search\" name=\"q\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Replace <code>YOUR_WEBSITE</code> with your actual website domain.</p>"},{"location":"api/","title":"API Overview","text":"<p>Welcome to the API documentation for Lixia Search API. This API equips you with the tools to effectively manage indexes, execute searches on documents, and access key functionalities for seamless integration into your applications. Discover detailed information, endpoints, and usage guidelines to make the most of this service.</p>"},{"location":"api/#getting-started","title":"Getting Started","text":"<p>New to Lixia Search API? Dive into the Getting Started Guide to kickstart your journey with our search API. This guide will walk you through the essential steps, from obtaining API credentials to making your first search query, ensuring a smooth onboarding experience.</p>"},{"location":"api/#endpoints","title":"Endpoints","text":"<ul> <li>Create Index</li> <li>Add or Update Document</li> <li>Delete Document</li> <li>Search Documents</li> </ul>"},{"location":"api/getting-started/","title":"Getting Started","text":"<p>Welcome to the Lixia Search API's Getting Started Guide! This step-by-step tutorial is designed to guide you through the process of searching within documents. We'll show you how to create an index, how to add documents to it and how to search within it.</p>"},{"location":"api/getting-started/#understanding-your-documents","title":"Understanding Your Documents","text":"<p>Before diving in, let's acquaint ourselves with the three sample documents we'll be using. Each document consists of three fields: id, title, and body. The id serves as a unique identifier (primary key), while the title and body are text-based fields that we'll search within.</p> <p>Document 1</p> <pre><code>id: 1\ntitle: Town's Basketball Team Scores Championship Win\nbody: In an exhilarating match, the local basketball team secured a championship victory, showcasing exceptional teamwork and skill. The win not only brought pride to the community but also underscored the positive impact of sports in fostering unity and camaraderie among residents.\n</code></pre> <p>Document 2</p> <pre><code>id: 2\ntitle: Students Showcase Innovation at School Science Fair\nbody: The recent school science fair showcased impressive projects, ranging from eco-friendly inventions to scientific experiments. The event celebrated the creativity and innovation of students, inspiring a passion for learning and exploration within the school community.\n</code></pre> <p>Document 3</p> <pre><code>id: 3\ntitle: Local Gym Promotes Health with Fitness Challenge\nbody: A local gym is encouraging community well-being by organizing a fitness challenge for residents. Participants engage in various activities promoting a healthy lifestyle, fostering a sense of community and emphasizing the importance of physical well-being.\n</code></pre>"},{"location":"api/getting-started/#step-1-sign-in-to-the-dashboard","title":"Step 1: Sign in to the Dashboard","text":"<p>Visit https://dashboard.lixiasearch.com and sign in with your credentials. If you don't have an account yet, go to https://dashboard.lixiasearch.com/sign-up.</p> <p>Copy the Account ID from the dashboard; we'll need it for the next steps.</p> <p>You can export it in your terminal:</p> <pre><code>export ACCOUNT_ID=&lt;your-account-id&gt;\n</code></pre>"},{"location":"api/getting-started/#step-2-create-an-access-token","title":"Step 2: Create an Access Token","text":"<p>Navigate to the Access Tokens section in the dashboard, click on Create Access Token, and generate an access token with \"Read and Write\" access. Copy the access token; it will be used in subsequent steps.</p> <p>You can export it in your terminal:</p> <pre><code>export ACCESS_TOKEN=&lt;your-access-token&gt;\n</code></pre>"},{"location":"api/getting-started/#step-3-create-an-index","title":"Step 3: Create an Index","text":"<p>Before we can add documents, we need to create an index. There are three things to know about indexes.</p> <ol> <li> <p>An index is a collection of documents. We can add, update and remove documents from indexes. And more importantly, we can search documents within an index.</p> </li> <li> <p>An index has a schema. It defines the fields and their corresponding types within the documents.</p> </li> <li> <p>One of the field in the schema is special. It's the primary key. It's the field that is used to uniquely identify a document. Only one document can exist per primary key value.</p> </li> </ol> <p>In this tutorial, we'll name the primary key <code>id</code>. And we'll use two text-based fields: title and body.</p> <p>With the token you created in the previous step, let's create an index with the Create Index endpoint.</p> <p>Request:</p> <pre><code>curl https://api.lixiasearch.com/v1/indexes \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n  --header \"Content-Type: application/json\" \\\n  --data @- &lt;&lt;EOF\n{\n  \"accountId\": \"$ACCOUNT_ID\",\n  \"fields\": [\n    {\"name\": \"id\", \"primaryKey\": true, \"type\": \"int64\"},\n    {\"name\": \"body\", \"type\": \"text\"},\n    {\"name\": \"title\", \"type\": \"text\"}\n  ],\n  \"name\": \"my_index\"\n}\nEOF\n</code></pre> <p>Response:</p> <pre><code>{\n    \"id\": &lt;index id&gt;\n}\n</code></pre> <p>Replace <code>$ACCESS_TOKEN</code> with your access token and <code>$ACCOUNT_ID</code> with your account ID obtained in Step 1.</p> <p>The response body is the index id. Copy it; it will be used in subsequent steps.</p> <p>You can export it in your terminal:</p> <pre><code>export INDEX_ID=&lt;your-index-id&gt;\n</code></pre> <p>So we've created a schema with three fields:</p> <ul> <li>id: has <code>int64</code> type and is the primary key</li> <li>title: has <code>text</code> type</li> <li>body: has <code>text</code> type</li> </ul> <p>As we've configured the type of the title and body fields as text, we'll have the capability to perform full-text searches within these fields.</p>"},{"location":"api/getting-started/#step-4-add-documents-to-your-index","title":"Step 4: Add Documents to Your Index","text":"<p>Now the index is ready, let's add documents to it using the Add or Update Document endpoint:</p> <p>Document 1:</p> <pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/documents \\\n    --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n    --header \"Content-Type: application/json\" \\\n    --data @- &lt;&lt; EOF\n{\n    \"fields\": [\n        {\"name\": \"body\", \"value\": \"In an exhilarating match, the local basketball team secured a championship victory, showcasing exceptional teamwork and skill. The win not only brought pride to the community but also underscored the positive impact of sports in fostering unity and camaraderie among residents.\"},\n        {\"name\": \"id\", \"value\": 1},\n        {\"name\": \"title\", \"value\": \"Town's Basketball Team Scores Championship Win\"}\n    ]\n}\nEOF\n</code></pre> <p>Document 2:</p> <pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/documents \\\n    --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n    --header \"Content-Type: application/json\" \\\n    --data @- &lt;&lt; EOF\n{\n    \"fields\": [\n        {\"name\": \"body\", \"value\": \"The recent school science fair showcased impressive projects, ranging from eco-friendly inventions to scientific experiments. The event celebrated the creativity and innovation of students, inspiring a passion for learning and exploration within the school community.\"},\n        {\"name\": \"id\", \"value\": 2},\n        {\"name\": \"title\", \"value\": \"Students Showcase Innovation at School Science Fair\"}\n    ]\n}\nEOF\n</code></pre> <p>Document 3:</p> <pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/documents \\\n    --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n    --header \"Content-Type: application/json\" \\\n    --data @- &lt;&lt; EOF\n{\n    \"fields\": [\n        {\"name\": \"body\", \"value\": \"A local gym is encouraging community well-being by organizing a fitness challenge for residents. Participants engage in various activities promoting a healthy lifestyle, fostering a sense of community and emphasizing the importance of physical well-being.\"},\n        {\"name\": \"id\", \"value\": 3},\n        {\"name\": \"title\", \"value\": \"Local Gym Promotes Health with Fitness Challenge\"}\n    ]\n}\nEOF\n</code></pre>"},{"location":"api/getting-started/#step-5-search-within-your-documents","title":"Step 5: Search Within Your Documents","text":"<p>With documents in the index, utilize the Search endpoint to perform searches.</p> <p>The search endpoint is broken down into a few components.</p> <p>It requires us to define the filters, determining the values by which we will filter the documents. This is managed through the <code>filter</code> field. Subsequently, we need to specify the fields to be returned, controlled by the <code>selectFields</code> field.</p> <p>For instance, if we want to retrieve all documents containing the word \"community\" in either their title or body, and we only want to display the id and title of each document:</p> <pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/search \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n  --header \"Content-Type: application/json\" \\\n  --data @- &lt;&lt; EOF\n{\n    \"filters\": [\n        { \"type\": \"field\", \"name\": \"body\", \"values\": [\"community\"] },\n        { \"type\": \"field\", \"name\": \"title\", \"values\": [\"community\"] }\n    ],\n    \"offset\": 0,\n    \"selectFields\": [\n        {\n            \"name\": \"id\",\n            \"value\": true\n        },\n        {\n            \"name\": \"title\",\n            \"value\": true\n        }\n    ]\n}\nEOF\n</code></pre> <p>Response:</p> <pre><code>{\n    \"hasMoreDocuments\": false,\n    \"hits\": [\n        {\n            \"fields\": [\n                {\n                    \"name\": \"id\",\n                    \"value\": 3\n                },\n                {\n                    \"name\": \"title\",\n                    \"value\": \"Local Gym Promotes Health with Fitness Challenge\"\n                }\n            ]\n        },\n        {\n            \"fields\": [\n                {\n                    \"name\": \"id\",\n                    \"value\": 2\n                },\n                {\n                    \"name\": \"title\",\n                    \"value\": \"Students Showcase Innovation at School Science Fair\"\n                }\n            ]\n        },\n        {\n            \"fields\": [\n                {\n                    \"name\": \"id\",\n                    \"value\": 1\n                },\n                {\n                    \"name\": \"title\",\n                    \"value\": \"Town's Basketball Team Scores Championship Win\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> <p>Note that the hits are oredered based on their relevance, with the most pertinent one being presented first.</p> <p>A notable feature of Lixia Search is its capability to provide a highlighted snippet for a field. Lixia Search will automatically find the best snippet based on the query. Lixia Search will also guarantee that the snippet can be no longer than a certain limit. For example, here's how to get a snippet of the body, limited to 200 characters, for the query \"community\":</p> <pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/search \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n  --header \"Content-Type: application/json\" \\\n  --data @- &lt;&lt; EOF\n{\n    \"filters\": [\n        { \"type\": \"field\", \"name\": \"body\", \"values\": [\"community\"] },\n        { \"type\": \"field\", \"name\": \"title\", \"values\": [\"community\"] }\n    ],\n    \"offset\": 0,\n    \"selectFields\": [\n        {\n            \"name\": \"id\",\n            \"value\": true\n        },\n         {\n            \"name\": \"title\",\n            \"value\": true\n        },\n        {\n            \"name\": \"body\",\n            \"snippet\": { \"escapeHtml\": true, \"length\": 200 },\n            \"value\": false\n        }\n    ]\n}\nEOF\n</code></pre> <p>Response:</p> <pre><code>{\n    \"hasMoreDocuments\": false,\n    \"hits\": [\n        {\n            \"fields\": [\n                {\n                    \"name\": \"id\",\n                    \"value\": 3\n                },\n                {\n                    \"name\": \"title\",\n                    \"value\": \"Local Gym Promotes Health with Fitness Challenge\"\n                },\n                {\n                    \"name\": \"body\",\n                    \"snippet\": \"A local gym is encouraging &lt;em&gt;community&lt;/em&gt; well-being by organizing a fitness challenge for residents. Participants engage in various activities promoting a healthy lifestyle, fostering a sense of ...\"\n                }\n            ]\n        },\n        {\n            \"fields\": [\n                {\n                    \"name\": \"id\",\n                    \"snippet\": null,\n                    \"value\": 2\n                },\n                {\n                    \"name\": \"title\",\n                    \"snippet\": null,\n                    \"value\": \"Students Showcase Innovation at School Science Fair\"\n                },\n                {\n                    \"name\": \"body\",\n                    \"snippet\": \"from eco-friendly inventions to scientific experiments. The event celebrated the creativity and innovation of students, inspiring a passion for learning and exploration within the school &lt;em&gt;community&lt;/em&gt; ...\"\n                }\n            ]\n        },\n        {\n            \"fields\": [\n                {\n                    \"name\": \"id\",\n                    \"value\": 1\n                },\n                {\n                    \"name\": \"title\",\n                    \"value\": \"Town's Basketball Team Scores Championship Win\"\n                },\n                {\n                    \"name\": \"body\",\n                    \"snippet\": \"victory, showcasing exceptional teamwork and skill. The win not only brought pride to the &lt;em&gt;community&lt;/em&gt; but also underscored the positive impact of sports in fostering unity and camaraderie among ...\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> <p>That concludes this tutorial! If you have any questions, please reach out to us at support@lixiasearch.com.</p>"},{"location":"api/endpoints/add-or-update-document/","title":"Add or Update Document","text":""},{"location":"api/endpoints/add-or-update-document/#overview","title":"Overview","text":"<p>This endpoint allows you to add or update a document in an index. The primary key defined on the index determines if the operation is an add or an update.</p>"},{"location":"api/endpoints/add-or-update-document/#endpoint","title":"Endpoint","text":"<pre><code>POST https://api.lixiasearch.com/v1/indexes/{indexId}/documents\n</code></pre>"},{"location":"api/endpoints/add-or-update-document/#request-body","title":"Request Body","text":"<pre><code>{\n    \"fields\": [\n        {\n            \"name\": \"string\",\n            \"value\": any\n        },\n        ...\n    ]\n}\n</code></pre> <ul> <li><code>fields</code>: An array of key-value pairs. Each field defined in the index must be provided.<ul> <li><code>name</code>: The name of the field.</li> <li><code>value</code>: The value of the field.</li> </ul> </li> </ul>"},{"location":"api/endpoints/add-or-update-document/#example","title":"Example","text":"<pre><code>curl https://api.lixiasearch.com/v1/indexes/&lt;INDEX_ID&gt;/documents \\\n    --header \"Authorization: Bearer &lt;ACCESS_TOKEN&gt;\" \\\n    --data '{\n        \"fields\": [\n            {\"name\": \"body\", \"value\": \"Sample body content\"},\n            {\"name\": \"id\", \"value\": 4},\n            {\"name\": \"title\", \"value\": \"Sample Title\"},\n        ]\n    }'\n</code></pre> <p>Ensure you replace <code>&lt;ACCESS_TOKEN&gt;</code> with your actual access token and <code>&lt;INDEX_ID&gt;</code> with the appropriate index id.</p>"},{"location":"api/endpoints/add-or-update-document/#response-body","title":"Response Body","text":"<p>(empty body)</p> <pre><code>{}\n</code></pre>"},{"location":"api/endpoints/create-index/","title":"Create Index","text":""},{"location":"api/endpoints/create-index/#overview","title":"Overview","text":"<p>This endpoint allows you to create a new index, which serves as a collection of documents. Subsequently, you can add documents using the Add or Update Document endpoint, and perform searches on the created index using the Search endpoint.</p>"},{"location":"api/endpoints/create-index/#endpoint","title":"Endpoint","text":"<pre><code>POST https://api.lixiasearch.com/v1/indexes\n</code></pre>"},{"location":"api/endpoints/create-index/#request-body","title":"Request Body","text":"<pre><code>{\n    \"accountId\": int,\n    \"fields\": [\n        {\n        \"name\": \"string\",\n        \"feature\": int,\n        \"primaryKey\": boolean,\n        \"type\": \"int64\" | \"string\" | \"text\"\n        },\n        ...\n    ],\n    \"name\": \"string\"\n}\n</code></pre> <ul> <li><code>accountId</code>: The unique identifier associated with your account.</li> <li><code>fields</code>: An array of field objects, each defining the characteristics of a document field.<ul> <li><code>name</code>: The name of the field</li> <li><code>feature</code>: A boolean indicating whether the field can be used as a feature for custom scoring. See the Search endpoint for more details.</li> <li><code>primaryKey</code>: A boolean indicating whether the field is a primary key. Exactly one field can be designated as the primary key.</li> <li><code>type</code>: The data type of the field, which can be \"int64\", \"string\" or \"text\".<ul> <li><code>int64</code>: Represents a 64-bit integer.</li> <li><code>string</code>: Denotes a non-tokenized string, usually used for constants.</li> <li><code>text</code>: Refers to tokenized text.</li> </ul> </li> </ul> </li> <li><code>name</code>: A descriptive name for the new index.</li> </ul>"},{"location":"api/endpoints/create-index/#example","title":"Example","text":"<pre><code>curl https://api.lixiasearch.com/v1/indexes \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n  --header \"Content-Type: application/json\" \\\n  --data @- &lt;&lt;EOF\n{\n  \"accountId\": \"$ACCOUNT_ID\",\n  \"fields\": [\n    {\"name\": \"id\", \"primaryKey\": true, \"type\": \"int64\"},\n    {\"name\": \"body\", \"type\": \"text\"},\n    {\"name\": \"title\", \"type\": \"text\"}\n  ],\n  \"name\": \"my_index\"\n}\nEOF\n</code></pre> <p>Make sure you replace <code>$ACCESS_TOKEN</code> and <code>$ACCOUNT_ID$</code> with your actual access token and account ID.</p>"},{"location":"api/endpoints/create-index/#response-body","title":"Response Body","text":"<pre><code>{\n    \"id\": int\n}\n</code></pre> <ul> <li><code>id</code>: The unique identifier assigned to the newly created index.</li> </ul>"},{"location":"api/endpoints/delete-document/","title":"Delete Document","text":""},{"location":"api/endpoints/delete-document/#overview","title":"Overview","text":"<p>This endpoint allows you to remove a specific document from the index using its primary key.</p>"},{"location":"api/endpoints/delete-document/#endpoint","title":"Endpoint","text":"<pre><code>DELETE https://api.lixiasearch.com/v1/indexes/{indexId}/documents/{primaryKey}\n</code></pre>"},{"location":"api/endpoints/delete-document/#request-example","title":"Request Example","text":"<pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/documents/$PRIMARY_KEY \\\n    -X DELETE \\\n    --header \"Authorization: Bearer $ACCESS_TOKEN\"\n</code></pre> <p>Ensure you replace <code>$INDEX_ID</code> with the actual unique identifier of your index, <code>$PRIMARY_KEY</code> with the primary key of the document you want to delete, and<code>$ACCESS_TOKEN$</code> with a valid authentication token.</p>"},{"location":"api/endpoints/search/","title":"Search","text":""},{"location":"api/endpoints/search/#overview","title":"Overview","text":"<p>This endpoint allows you to search for documents within an index.</p>"},{"location":"api/endpoints/search/#endpoint","title":"Endpoint","text":"<pre><code>POST https://api.lixiasearch.com/v1/indexes/{indexId}/search\n</code></pre>"},{"location":"api/endpoints/search/#usages","title":"Usages","text":""},{"location":"api/endpoints/search/#basic-usage","title":"Basic usage","text":"<p>Define your query by setting the values to filter and their respective fields using the <code>filters</code> parameter. Specify the fields to be included in the results with the <code>selectFields</code> parameter. For each field, you have the option to retrieve its value and/or a snippet of the best match within the document based on the provided query.</p> <pre><code>{\n    \"filters\": [\n        {\n            \"type\": \"string\",\n            \"name\": \"string\",\n            \"values\": [\"string\"]\n        }\n    ],\n    \"selectFields\": [\n        {\n            \"name\": \"string\",\n            \"value\": boolean,\n            \"snippet\": {\n                \"escapeHtml\": boolean,\n                \"length\": int\n            }\n        }\n    ],\n    \"offset\": int\n}\n</code></pre> <ul> <li><code>filters</code>: An array of filters<ul> <li><code>type</code>: \"field\", the only supported filter</li> <li><code>name</code>: name of the field</li> <li><code>values</code>: values to filter on. The elements in the array are interpreted as an OR (any)</li> </ul> </li> <li> <p><code>selectFields</code>: An array detailing the fields to return in the search results.</p> <ul> <li><code>name</code>: The name of the field.</li> <li><code>value</code>: A boolean indicating whether to include the field value in the search results.</li> <li><code>snippet</code> (optional): A parameter allowing retrieval of a snippet containing the best match within the document for the given query.<ul> <li><code>escapeHtml</code>: A boolean indicating whether HTML escaping should be applied to the snippet.</li> <li><code>length</code>: An integer specifying the maximum length of the snippet.</li> </ul> </li> </ul> </li> <li> <p><code>offset</code>: The number of documents to skip before returning results.</p> </li> </ul>"},{"location":"api/endpoints/search/#example","title":"Example","text":"<pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/search \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN\" \\\n  --header \"Content-Type: application/json\" \\\n  --data @- &lt;&lt; EOF\n{\n    \"filters\": [\n        { \"type\": \"field\", \"name\": \"body\", \"values\": [\"hello\"] },\n        { \"type\": \"field\", \"name\": \"title\", \"values\": [\"hello\"] }\n    ],\n    \"offset\": 0,\n    \"selectFields\": [\n        {\n            \"name\": \"id\",\n            \"value\": true\n        },\n         {\n            \"name\": \"title\",\n            \"value\": true\n        },\n        {\n            \"name\": \"body\",\n            \"snippet\": { \"escapeHtml\": true, \"length\": 200 },\n            \"value\": false\n        }\n    ]\n}\nEOF\n</code></pre> <p>Make sure you replace <code>$ACCESS_TOKEN</code> with your actual access token and <code>$INDEX_ID</code> with the appropriate index id.</p> <p>Response:</p> <pre><code>{\n    \"hasMoreDocuments\": false,\n    \"hits\": [\n        {\n            \"fields\": [\n                {\n                    \"name\": \"body\",\n                    \"snippet\": \"This is a &lt;em&gt;hello&lt;/em&gt; world.\"\n                },\n                {\n                    \"name\": \"title\",\n                    \"value\": \"Hello world\"\n                }\n            ]\n        },\n        {\n            \"fields\": [\n                {\n                    \"name\": \"body\",\n                    \"snippet\": \"A friendly &lt;em&gt;hello&lt;/em&gt; from the data!\"\n                },\n                {\n                    \"name\": \"title\",\n                    \"value\": \"Data Greeting\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"api/endpoints/search/#custom-scoring","title":"Custom Scoring","text":"<p>By default, Lixia Search assigns a score to each document based on its relevance to the query. You can customize this behavior if you created an index with fields declared as features. These fields can hold non-negative numeric values that indicate how good a document is, independently of the query (e.g., page rank score, reputation, or any other numeric value).</p> <pre><code>{\n    ...\n    \"scoring\": [{\n        \"type\": \"string\",\n        \"weight\": int,\n        // other fields if necessary\n    }]\n}\n</code></pre> <ul> <li><code>scoring</code>: An array of scoring factors<ul> <li><code>type</code>: <code>words</code> or <code>feature</code></li> <li><code>weight</code>: the weight given to this scoring factor</li> <li><code>name</code> (only when <code>type</code> = <code>feature</code>): the name of the field containing the feature value</li> </ul> </li> </ul>"},{"location":"api/endpoints/search/#example_1","title":"Example","text":"<p>In this example, we assign a weight of 6 to the document based on the specified query (<code>words</code> scoring factor). We also assign specific weights to two feature fields: 3 for <code>reputation</code> and 1 for <code>inbound_links</code>.</p> <p>Therefore, the scoring mix involves both query-dependent and query-independent factors. Specifically, 60% of the total weight comes from how well the document matches the query. While the <code>reputation</code> field contributes 30%, and the <code>inbound_links</code> field makes up the remaining 10%.</p> <pre><code>curl https://api.lixiasearch.com/v1/indexes/$INDEX_ID/search \\\n  --header \"Authorization: Bearer $ACCESS_TOKEN$\" \\\n  --header \"Content-Type: application/json\" \\\n  --data @- &lt;&lt; EOF\n{\n    \"filters\": [\n        { \"type\": \"field\", \"name\": \"body\", \"values\": [\"foobar\"] },\n        { \"type\": \"field\", \"name\": \"title\", \"values\": [\"foobar\"] }\n    ],\n    \"offset\": 0,\n    \"selectFields\": [\n        {\n            \"name\": \"id\",\n            \"value\": true\n        },\n         {\n            \"name\": \"title\",\n            \"value\": true\n        }\n    ],\n    \"scoring\": [\n        {\"type\": \"words\", \"weight\": 6},\n        {\"type\": \"feature\", \"name\": \"reputation\", \"weight\": 3},\n        {\"type\": \"feature\", \"name\": \"inbound_links\", \"weight\": 1}\n    ]\n}\nEOF\n</code></pre> <p>Make sure you replace <code>$ACCESS_TOKEN</code> with your actual access token and <code>$INDEX_ID$</code> with the appropriate index id.</p>"},{"location":"api/endpoints/search/#response-body","title":"Response Body","text":"<pre><code>{\n    \"hasMoreDocuments\": boolean,\n    \"hits\": [\n        {\n            \"fields\": [\n                {\n                    \"name\": \"string\",\n                    \"snippet\": \"string\" | null,\n                    \"value\": \"string | null\n                },\n                ...\n            ]\n        },\n        ...\n    ]\n}\n</code></pre> <ul> <li><code>hasMoreDocuments</code>: Indicates whether there are additional pages of results.</li> <li><code>hits</code>: A list of hits, where each hit corresponds to a document.<ul> <li><code>fields</code>: The fields associated with a hit.<ul> <li><code>name</code>: The name of the field.</li> <li><code>snippet</code>: A snippet of the field, or undefined if not requested.</li> <li><code>value</code>: The value of the field, or undefined if not requested.</li> </ul> </li> </ul> </li> </ul>"}]}